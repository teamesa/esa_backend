plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled true

		html.destination file("src/jacoco/jacoco.html")
		xml.destination file("src/jacoco/jacoco.xml")
	}

	def Qdomains = []
	for (qPattern in '**/QA'..'**/QZ') {
		Qdomains.add(qPattern + '*')
	}

	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, excludes: [
							'**/BlogApplication*',
							'**/*Request*',
							'**/*Response*',
							'**/*Dto*',
							'**/*OAuthClient*',
							'**/*Interceptor*',
							'**/*Exception*',
							'**/*Storage*',
							'**/*BaseDate*',
							'**/*PageController*'
					] + Qdomains)
				})
		)
	}
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			enabled = true

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.60
			}

			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.60
			}

			excludes = [
					'**.*Application*',
					'**.*Request*',
					'**.*Response*',
					'**.*Dto*',
					'**.*Exception*',
					'**.*PageController*',
			]
		}
	}
}

jacoco {
	toolVersion = '0.8.7'
}
